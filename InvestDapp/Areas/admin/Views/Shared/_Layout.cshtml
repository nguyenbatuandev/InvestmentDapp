<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>InvestDapp Admin Dashboard</title>
    <!-- ======= Styles ====== -->
    @RenderSection("Styles", required: false)
</head>
<style>
    /* =========== Google Fonts ============ */
    @@import url("https://fonts.googleapis.com/css2?family=Ubuntu:wght@300;400;500;700&display=swap");
    
    /* =============== Globals ============== */
    * {
        font-family: "Ubuntu", sans-serif;
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    :root {
        --blue: #2563eb;
        --blue-light: #3b82f6;
        --white: #fff;
        --gray: #f5f5f5;
        --gray-light: #f9fafb;
        --gray-dark: #6b7280;
        --black1: #222;
        --black2: #999;
        --success: #10b981;
        --warning: #f59e0b;
        --danger: #ef4444;
        --shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
        --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1);
    }

    body {
        min-height: 100vh;
        overflow-x: hidden;
        background: var(--gray-light);
    }

    .container {
        position: relative;
        width: 100%;
    }

    /* =============== Navigation ================ */
    .navigation {
        position: fixed;
        width: 300px;
        height: 100%;
        background: var(--blue);
        border-left: 10px solid var(--blue);
        transition: 0.5s;
        overflow-y: auto;
        -webkit-overflow-scrolling: touch;
        z-index: 1000;
    }

        .navigation.active {
            width: 80px;
        }

        .navigation ul {
            position: relative; /* keep list in-flow so submenu expansion pushes siblings */
            width: 100%;
            z-index: 1001;
            padding: 10px 0; /* small vertical padding */
        }

            .navigation ul li {
                position: relative;
                width: 100%;
                list-style: none;
                border-top-left-radius: 30px;
                border-bottom-left-radius: 30px;
            }

                .navigation ul li:hover,
                .navigation ul li.hovered {
                    background-color: var(--white);
                }
                .navigation ul li a {
                    position: relative;
                    display: block;
                    width: 100%;
                    display: flex;
                    text-decoration: none;
                    color: var(--white);
                }

                .navigation ul li:hover a,
                .navigation ul li.hovered a {
                    color: var(--blue);
                }

                .navigation ul li a .icon {
                    position: relative;
                    display: block;
                    min-width: 60px;
                    height: 60px;
                    line-height: 75px;
                    text-align: center;
                }

                    .navigation ul li a .icon ion-icon {
                        font-size: 1.75rem;
                    }

                .navigation ul li a .title {
                    position: relative;
                    display: block;
                    padding: 0 10px;
                    height: 60px;
                    line-height: 60px;
                    text-align: start;
                    white-space: nowrap;
                    flex: 1;
                }

                .navigation ul li a .arrow {
                    position: relative;
                    display: block;
                    min-width: 30px;
                    height: 60px;
                    line-height: 60px;
                    text-align: center;
                    transition: transform 0.3s ease;
                }

                .navigation ul li.active .arrow {
                    transform: rotate(180deg);
                }

                /* Submenu Styles (in-flow by default) */
                .navigation ul li.has-submenu .submenu {
                    list-style: none;
                    padding: 0;
                    margin: 0;
                    background: rgba(255, 255, 255, 0.04);
                    max-height: 0;
                    overflow: hidden;
                    transition: max-height 0.28s ease, padding 0.25s ease;
                    width: 100%;
                }

                .navigation ul li.has-submenu.active .submenu {
                    max-height: 400px; /* allow enough room for items */
                    padding-bottom: 6px;
                }

                .navigation ul li.has-submenu .submenu li {
                    border-radius: 0;
                    background: transparent;
                    border-top-left-radius: 0;
                    border-bottom-left-radius: 0;
                }

                .navigation ul li.has-submenu .submenu li:hover {
                    background: rgba(255, 255, 255, 0.1);
                }

                .navigation ul li.has-submenu .submenu li::before,
                .navigation ul li.has-submenu .submenu li::after {
                    display: none;
                }

                .navigation ul li.has-submenu .submenu li a {
                    padding-left: 80px;
                    font-size: 14px;
                    color: var(--blue); /* submenu text is blue */
                    border-radius: 0;
                    height: 40px;
                    line-height: 40px;
                    min-width: auto;
                }

                .navigation ul li.has-submenu .submenu li a::before,
                .navigation ul li.has-submenu .submenu li a::after {
                    display: none;
                }

                /* Submenu hover color: when sidebar is expanded (parent becomes white),
                   use blue text for contrast; when sidebar is collapsed the floating
                   panel has a blue background so keep hover text white. */
                .navigation:not(.active) ul li.has-submenu .submenu li:hover a {
                    color: var(--blue);
                }

                /* Collapsed/floating panel hover (explicit) */
                .navigation.active ul li.has-submenu.active .submenu li:hover a,
                .floating-submenu .submenu li:hover a {
                    color: var(--white);
                }

                /* Remove hover effects for dropdown toggles */
                .navigation ul li.has-submenu:hover {
                    background-color: var(--white);
                }

                .navigation ul li.has-submenu:hover > a {
                    color: var(--blue);
                }

                .navigation ul li.has-submenu.active:hover {
                    background-color: var(--white);
                }


                /* Collapsed state: use floating submenu panels */
                .navigation.active ul li.has-submenu .submenu {
                    /* default hidden in collapsed-mode; JS will position and show when active */
                    position: absolute;
                    left: 80px;
                    top: 0;
                    width: 220px;
                    background: var(--blue);
                    border-radius: 8px;
                    box-shadow: var(--shadow-lg);
                    z-index: 10000;
                    display: none; /* hidden until JS sets display:block for the active one */
                    max-height: none;
                    overflow: visible;
                }

                /* when sidebar is collapsed and dropdown is active we show floating panel */
                .navigation.active ul li.has-submenu.active .submenu {
                    display: block !important;
                }

                .navigation.active ul li.has-submenu .submenu li a {
                    padding-left: 20px;
                    padding-right: 20px;
                }

                /* --------- curve outside ---------- */
                .navigation ul li:hover a::before,
                .navigation ul li.hovered a::before {
                    content: "";
                    position: absolute;
                    right: 0;
                    top: -50px;
                    width: 50px;
                    height: 50px;
                    background-color: transparent;
                    border-radius: 50%;
                    box-shadow: 35px 35px 0 10px var(--white);
                    pointer-events: none;
                }

                .navigation ul li:hover a::after,
                .navigation ul li.hovered a::after {
                    content: "";
                    position: absolute;
                    right: 0;
                    bottom: -50px;
                    width: 50px;
                    height: 50px;
                    background-color: transparent;
                    border-radius: 50%;
                    box-shadow: 35px -35px 0 10px var(--white);
                    pointer-events: none;
                }

    /* ===================== Main ===================== */
    .main {
        position: absolute;
        width: calc(100% - 300px);
        left: 300px;
        min-height: 100vh;
        background: var(--gray-light);
        transition: 0.5s;
        padding: 20px;
    }

        .main.active {
            width: calc(100% - 80px);
            left: 80px;
        }

    .topbar {
        width: 100%;
        height: 60px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0 10px;
        background: var(--white);
        border-radius: 12px;
        box-shadow: var(--shadow);
        margin-bottom: 20px;
    }

    .toggle {
        position: relative;
        width: 60px;
        height: 60px;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 2.5rem;
        cursor: pointer;
        border-radius: 50%;
        transition: background-color 0.3s;
    }

    .toggle:hover {
        background-color: var(--gray);
    }

    .search {
        position: relative;
        width: 400px;
        margin: 0 10px;
    }

        .search label {
            position: relative;
            width: 100%;
        }

            .search label input {
                width: 100%;
                height: 40px;
                border-radius: 20px;
                padding: 5px 20px;
                padding-left: 35px;
                font-size: 14px;
                outline: none;
                border: 1px solid #e5e7eb;
                background: var(--gray-light);
            }

            .search label input:focus {
                border-color: var(--blue);
                box-shadow: 0 0 0 3px rgb(59 130 246 / 0.1);
            }

            .search label ion-icon {
                position: absolute;
                top: 50%;
                left: 10px;
                transform: translateY(-50%);
                font-size: 1.2rem;
                color: var(--gray-dark);
            }

    .user {
        position: relative;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        overflow: hidden;
        cursor: pointer;
        border: 2px solid var(--blue);
    }

        .user img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    /* ======================= Cards ====================== */
    .cardBox {
        position: relative;
        width: 100%;
        padding: 0;
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        grid-gap: 20px;
        margin-bottom: 30px;
    }

        .cardBox .card {
            position: relative;
            background: var(--white);
            padding: 30px;
            border-radius: 16px;
            display: flex;
            justify-content: space-between;
            cursor: pointer;
            box-shadow: var(--shadow);
            transition: all 0.3s ease;
            border: 1px solid #e5e7eb;
        }

            .cardBox .card:hover {
                background: var(--blue);
                transform: translateY(-4px);
                box-shadow: var(--shadow-lg);
            }

            .cardBox .card .numbers {
                position: relative;
                font-weight: 600;
                font-size: 2.5rem;
                color: var(--blue);
                transition: color 0.3s;
            }

            .cardBox .card .cardName {
                color: var(--gray-dark);
                font-size: 1rem;
                margin-top: 5px;
                font-weight: 500;
                transition: color 0.3s;
            }

            .cardBox .card .iconBx {
                font-size: 3rem;
                color: var(--gray-dark);
                transition: color 0.3s;
            }

            .cardBox .card:hover .numbers,
            .cardBox .card:hover .cardName,
            .cardBox .card:hover .iconBx {
                color: var(--white);
            }

    /* ================== Order Details List ============== */
    .details {
        position: relative;
        width: 100%;
        display: grid;
        grid-template-columns: 2fr 1fr;
        grid-gap: 20px;
    }

        .details .recentOrders {
            position: relative;
            display: grid;
            min-height: 500px;
            background: var(--white);
            padding: 25px;
            box-shadow: var(--shadow);
            border-radius: 16px;
            border: 1px solid #e5e7eb;
        }

        .details .cardHeader {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 20px;
        }

    .cardHeader h2 {
        font-weight: 600;
        color: var(--blue);
        font-size: 1.5rem;
    }

    .cardHeader .btn {
        position: relative;
        padding: 8px 16px;
        background: var(--blue);
        text-decoration: none;
        color: var(--white);
        border-radius: 8px;
        font-size: 14px;
        font-weight: 500;
        transition: all 0.3s;
    }

    .cardHeader .btn:hover {
        background: var(--blue-light);
        transform: translateY(-1px);
    }

    .details table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 10px;
    }

        .details table thead td {
            font-weight: 600;
            color: var(--gray-dark);
            padding: 12px 10px;
            border-bottom: 2px solid #e5e7eb;
        }

    .details .recentOrders table tr {
        color: var(--black1);
        border-bottom: 1px solid #f3f4f6;
    }

        .details .recentOrders table tr:last-child {
            border-bottom: none;
        }

    .details .recentOrders table tbody tr:hover {
        background: var(--gray-light);
        color: var(--black1);
    }

    .details .recentOrders table tr td {
        padding: 12px 10px;
    }

        .details .recentOrders table tr td:last-child {
            text-align: end;
        }

        .details .recentOrders table tr td:nth-child(2) {
            text-align: end;
        }

        .details .recentOrders table tr td:nth-child(3) {
            text-align: center;
        }

    /* Status badges */
    .status {
        padding: 4px 8px;
        border-radius: 6px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .status.delivered {
        background: #dcfce7;
        color: var(--success);
    }

    .status.pending {
        background: #fef3c7;
        color: var(--warning);
    }

    .status.return {
        background: #fee2e2;
        color: var(--danger);
    }

    .status.inProgress {
        background: #dbeafe;
        color: var(--blue);
    }

    .recentCustomers {
        position: relative;
        display: grid;
        min-height: 500px;
        padding: 25px;
        background: var(--white);
        box-shadow: var(--shadow);
        border-radius: 16px;
        border: 1px solid #e5e7eb;
    }

        .recentCustomers .imgBx {
            position: relative;
            width: 40px;
            height: 40px;
            border-radius: 50px;
            overflow: hidden;
        }

            .recentCustomers .imgBx img {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

        .recentCustomers table tr td {
            padding: 12px 10px;
        }

            .recentCustomers table tr td h4 {
                font-size: 16px;
                font-weight: 500;
                line-height: 1.2rem;
            }

                .recentCustomers table tr td h4 span {
                    font-size: 14px;
                    color: var(--gray-dark);
                }

        .recentCustomers table tr:hover {
            background: var(--gray-light);
        }

    /* Alert messages */
    .alert {
        padding: 12px 16px;
        margin-bottom: 20px;
        border-radius: 8px;
        font-weight: 500;
    }

    .alert-success {
        background: #dcfce7;
        color: var(--success);
        border: 1px solid #bbf7d0;
    }

    .alert-danger {
        background: #fee2e2;
        color: var(--danger);
        border: 1px solid #fecaca;
    }

    .alert-warning {
        background: #fef3c7;
        color: var(--warning);
        border: 1px solid #fed7aa;
    }

    /* ====================== Responsive Design ========================== */
    @@media (max-width: 1200px) {
        .cardBox {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @@media (max-width: 991px) {
        .navigation {
            left: -300px;
        }

        .navigation.active {
            width: 300px;
            left: 0;
        }

        .navigation.active ul li.has-submenu .submenu {
            position: relative;
            left: 0;
            width: 100%;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 0;
            box-shadow: none;
            display: block;
        }

        .navigation.active ul li.has-submenu:hover .submenu {
            display: block;
        }

        .main {
            width: 100%;
            left: 0;
        }

            .main.active {
                left: 300px;
            }

        .details {
            grid-template-columns: 1fr;
        }
    }

    @@media (max-width: 768px) {
        .cardBox {
            grid-template-columns: 1fr;
        }

        .recentOrders {
            overflow-x: auto;
        }

        .search {
            width: 200px;
        }

        .topbar {
            padding: 0 15px;
        }

        .main {
            padding: 15px;
        }

        .navigation ul li.has-submenu .submenu li a {
            padding-left: 60px;
        }
    }

    @@media (max-width: 480px) {
        .cardHeader h2 {
            font-size: 1.2rem;
        }

        .user {
            min-width: 40px;
        }

        .navigation {
            width: 100%;
            left: -100%;
            z-index: 10000;
        }

            .navigation.active {
                width: 100%;
                left: 0;
            }

        .toggle {
            z-index: 10001;
        }

        .main.active .toggle {
            color: #fff;
            position: fixed;
            right: 20px;
            left: initial;
            background: var(--blue);
        }

        .search {
            width: 150px;
        }

        .navigation ul li.has-submenu .submenu li a {
            padding-left: 40px;
            font-size: 13px;
        }
    }
</style>

<body>
    <!-- =============== Navigation ================ -->
    <div class="container">
        <div class="navigation">
            <ul>
                <li>
                    <a href="#">
                        <span class="icon">
                            <ion-icon name="diamond-outline"></ion-icon>
                        </span>
                        <span class="title">InvestDapp</span>
                    </a>
                </li>

               @Html.Partial("_Partial")
            </ul>
        </div>
		@RenderBody()
    </div>

    <!-- =========== Scripts =========  -->
    <script>
        // Improved navigation: compute floating submenu position when sidebar is collapsed
        document.addEventListener('DOMContentLoaded', function() {
            const navigation = document.querySelector('.navigation');
            const main = document.querySelector('.main');
            const toggle = document.querySelector('.toggle');

            // helper: close all dropdowns and remove inline positioning + clear hover states
            function closeAllDropdowns(removeInline = true) {
                document.querySelectorAll('.has-submenu.active').forEach(item => {
                    item.classList.remove('active');
                    if (removeInline) {
                        const sm = item.querySelector('.submenu');
                        if (sm) {
                            sm.style.position = '';
                            sm.style.top = '';
                            sm.style.left = '';
                            sm.style.display = '';
                            sm.style.zIndex = '';
                        }
                    }
                });
                // clear hovered state on all nav items
                document.querySelectorAll('.navigation li.hovered').forEach(i => i.classList.remove('hovered'));
            }

            // Create a floating submenu panel appended to body when nav is collapsed
            function createFloatingSubmenu(parentLi) {
                // remove existing floating
                removeFloatingPanel();

                const sm = parentLi.querySelector('.submenu');
                if (!sm || !navigation) return;

                // only for collapsed sidebar
                if (!navigation.classList.contains('active')) {
                    return; // in expanded mode, keep in-flow
                }

                // clone submenu to floating panel
                const clone = sm.cloneNode(true);
                const panel = document.createElement('div');
                panel.className = 'floating-submenu';
                panel.style.position = 'fixed';
                panel.style.background = getComputedStyle(navigation).backgroundColor || 'var(--blue)';
                panel.style.borderRadius = '8px';
                panel.style.boxShadow = '0 8px 24px rgba(0,0,0,0.15)';
                panel.style.zIndex = 12000;
                panel.style.overflow = 'auto';
                panel.style.maxHeight = '60vh';
                panel.appendChild(clone);

                document.body.appendChild(panel);

                // position next to navigation
                const navRect = navigation.getBoundingClientRect();
                const parentRect = parentLi.getBoundingClientRect();
                const top = Math.max(8, parentRect.top - 8);
                const left = navRect.right + 8;

                panel.style.left = left + 'px';
                panel.style.top = top + 'px';
                panel.style.width = '260px';

                // prevent clicks inside panel from closing
                panel.addEventListener('click', function(e) { e.stopPropagation(); });
                return panel;
            }

            function removeFloatingPanel() {
                const existing = document.querySelector('.floating-submenu');
                if (existing) existing.remove();
            }

            // setup consistent hover behavior for all nav items
            const navItems = document.querySelectorAll('.navigation ul li');
            navItems.forEach(item => {
                item.addEventListener('mouseenter', function() {
                    // clear other hovered
                    navItems.forEach(i => i.classList.remove('hovered'));
                    // skip brand item (InvestDapp) which has pointer-events disabled
                    const titleEl = item.querySelector('.title');
                    const titleText = titleEl ? titleEl.textContent.trim() : '';
                    if (titleText && titleText.toLowerCase() === 'investdapp') return;
                    item.classList.add('hovered');
                });

                item.addEventListener('mouseleave', function() {
                    item.classList.remove('hovered');
                });
            });

            // toggle sidebar
            if (toggle && navigation && main) {
                toggle.addEventListener('click', function() {
                    navigation.classList.toggle('active');
                    main.classList.toggle('active');

                    // when toggling, close dropdowns and reset inline styles
                    closeAllDropdowns(true);
                    removeFloatingPanel();
                });
            }

            // dropdown toggles with auto-close on mouseleave
            const dropdownToggles = document.querySelectorAll('.dropdown-toggle');
            const closeTimers = new Map();
            const CLOSE_DELAY = 100;

            function clearCloseTimer(li) {
                const t = closeTimers.get(li);
                if (t) {
                    clearTimeout(t);
                    closeTimers.delete(li);
                }
            }

            function startCloseTimer(li) {
                clearCloseTimer(li);
                const t = setTimeout(() => {
                    li.classList.remove('active');
                    li.classList.remove('hovered');
                    // remove floating panel if exists
                    removeFloatingPanel();
                    closeTimers.delete(li);
                }, CLOSE_DELAY);
                closeTimers.set(li, t);
            }

            // Open dropdowns on hover, close after delay on leave
            dropdownToggles.forEach(dt => {
                const parentLi = dt.closest('li.has-submenu');
                if (!parentLi) return;

                const sm = parentLi.querySelector('.submenu');

                function onEnter() {
                    // clear any pending close timer for this li
                    clearCloseTimer(parentLi);

                    // close other dropdowns
                    document.querySelectorAll('.has-submenu.active').forEach(item => {
                        if (item !== parentLi) {
                            item.classList.remove('active');
                            item.classList.remove('hovered');
                            clearCloseTimer(item);
                        }
                    });

                    parentLi.classList.add('active');
                    parentLi.classList.add('hovered');

                    // create floating panel when collapsed; in expanded mode CSS handles showing in-flow
                    const panel = createFloatingSubmenu(parentLi);

                    // attach hover listeners to floating panel or submenu to manage auto-close
                    const targetPanel = document.querySelector('.floating-submenu') || sm;
                    if (targetPanel) {
                        targetPanel.addEventListener('mouseenter', () => clearCloseTimer(parentLi));
                        targetPanel.addEventListener('mouseleave', () => startCloseTimer(parentLi));
                    }
                }

                function onLeave() {
                    // start close timer
                    startCloseTimer(parentLi);
                }

                // attach handlers
                parentLi.addEventListener('mouseenter', onEnter);
                parentLi.addEventListener('mouseleave', onLeave);
                // also support hovering the toggle itself
                dt.addEventListener('mouseenter', onEnter);
                dt.addEventListener('mouseleave', onLeave);
            });

            // close when clicking outside
            document.addEventListener('click', function(e) {
                if (!e.target.closest('.has-submenu')) {
                    closeAllDropdowns(true);
                }
            });

            // prevent submenu internal clicks from bubbling
            document.querySelectorAll('.submenu').forEach(sm => {
                sm.addEventListener('click', function(e) {
                    e.stopPropagation();
                });
            });

            // reposition floating submenu on resize/scroll
            function repositionAll() {
                removeFloatingPanel();
                document.querySelectorAll('.has-submenu.active').forEach(li => {
                    // recreate floating panel for first active
                    createFloatingSubmenu(li);
                });
            }

            window.addEventListener('resize', repositionAll);
            window.addEventListener('scroll', function() {
                // on scroll, hide floating panel to avoid misposition
                removeFloatingPanel();
            });

            // auto-hide alerts
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                setTimeout(() => {
                    alert.style.opacity = '0';
                    setTimeout(() => {
                        if (alert.parentNode) alert.remove();
                    }, 300);
                }, 5000);
            });

            // set active menu item by URL
            const currentPath = window.location.pathname.toLowerCase();
            const menuLinks = document.querySelectorAll('.navigation a[href]');
            menuLinks.forEach(link => {
                const href = link.getAttribute('href');
                if (href && href.toLowerCase() === currentPath) {
                    const parentLi = link.closest('li');
                    if (parentLi && parentLi.closest('.submenu')) {
                        const parentDropdown = parentLi.closest('.has-submenu');
                        if (parentDropdown) {
                            parentDropdown.classList.add('active');
                            // create floating only when nav is collapsed
                            if (navigation.classList.contains('active')) {
                                createFloatingSubmenu(parentDropdown);
                            }
                        }
                    }
                    if (parentLi) parentLi.classList.add('hovered');
                }
            });
        });
    </script>

    <!-- Scripts section -->
    @RenderSection("Scripts", required: false)

    <!-- ====== ionicons ======= -->
    <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
    <script src="~/js/contract-config.js"></script>

</body>

</html>