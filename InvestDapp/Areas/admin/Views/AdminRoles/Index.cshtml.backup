@model InvestDapp.Areas.Admin.ViewModels.Roles.RoleManagementViewModel
@{
    Layout = "~/Areas/admin/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = ViewData["Title"] ?? "Phân quyền quản trị";
    var onchainLabels = Model.AvailableRoles.Where(r => r.RequiresSignature).Select(r => r.Label).ToArray();
    var offchainLabels = Model.AvailableRoles.Where(r => !r.RequiresSignature).Select(r => r.Label).ToArray();
    var onchainList = onchainLabels.Length > 0 ? string.Join(", ", onchainLabels) : "On-chain";
    var offchainList = offchainLabels.Length > 0 ? string.Join(", ", offchainLabels) : "Off-chain";
}

@section Scripts {
    <script src="~/js/admin-roles.js"></script>
}

<div class="main role-main">
    <div class="topbar role-topbar">
        <div class="toggle">
            <ion-icon name="menu-outline"></ion-icon>
        </div>
        <div class="role-breadcrumb">
            <span>Admin</span>
            <ion-icon name="chevron-forward-outline"></ion-icon>
            <strong>Phân quyền</strong>
        </div>
    </div>

    <section class="role-panel">
        <header class="role-header">
            <div>
                <h1>Điều phối quyền truy cập</h1>
                <p>Quản lý quyền truy cập cho nhân sự nội bộ với cả mô hình on-chain và off-chain, vẫn đảm bảo đăng nhập bằng MetaMask.</p>
            </div>
        </header>

        <section class="role-mode-overview">
            <article class="mode-card onchain">
                <div class="mode-card__header">
                    <span class="mode-badge">On-chain</span>
                    <strong>Ký MetaMask & ghi smart contract</strong>
                </div>
                <p class="mode-card__body">Áp dụng cho: @onchainList. Máy chủ hoặc ví MetaMask phải giữ quyền <code>DEFAULT_ADMIN_ROLE</code>.</p>
            </article>
            <article class="mode-card offchain">
                <div class="mode-card__header">
                    <span class="mode-badge">Off-chain</span>
                    <strong>Quản lý trong cơ sở dữ liệu</strong>
                </div>
                <p class="mode-card__body">Áp dụng cho: @offchainList. Không phát sinh phí gas nhưng người dùng vẫn đăng nhập bằng MetaMask.</p>
            </article>
        </section>

        @if (!string.IsNullOrWhiteSpace(Model.SuccessMessage))
        {
            <div class="role-alert success" role="alert">@Model.SuccessMessage</div>
        }

        @if (!string.IsNullOrWhiteSpace(Model.ErrorMessage))
        {
            <div class="role-alert danger" role="alert">@Model.ErrorMessage</div>
        }

        <div class="role-grid">
            <div class="role-card">
                <div class="role-card__header">
                    <div class="role-chip">Cấp quyền</div>
                    <h2>Trao quyền cho ví</h2>
                </div>
                <form action="/admin/AdminRoles/GrantRole" method="post" class="role-form" autocomplete="off" data-blockchain-ready="@(Model.BlockchainStatus.ReadyForTransactions.ToString().ToLower())" data-role-action="grant">
                    @Html.AntiForgeryToken()
                    @if (!Model.BlockchainStatus.ReadyForTransactions)
                    {
                        <p class="role-client-note">
                            Chế độ ký bằng ví chỉ áp dụng cho các quyền On-chain @onchainList. Các quyền Off-chain @offchainList sẽ được lưu trực tiếp mà không cần giao dịch blockchain.
                        </p>
                    }

                    <label for="grant-wallet">Địa chỉ ví</label>
                    <input id="grant-wallet" name="WalletAddress" value="@Model.GrantWalletInput" placeholder="0x..." required />

                    <label for="grant-role">Chọn quyền</label>
                    <select id="grant-role" name="Role" required>
                        <option value="" disabled @(Model.SelectedGrantRole.HasValue ? string.Empty : "selected") hidden>Chọn quyền</option>
                        @foreach (var option in Model.AvailableRoles)
                        {
                            var isSelected = Model.SelectedGrantRole.HasValue && Model.SelectedGrantRole.Value == option.Role;
                            <option value="@option.Value"
                                    data-label="@option.Label"
                                    data-requires-signature="@option.RequiresSignature.ToString().ToLower()"
                                    data-mode-label="@option.ModeLabel"
                                    data-mode-description="@option.ModeDescription"
                                    data-category="@option.Category"
                                    @(isSelected ? "selected" : string.Empty)>@option.Label (@option.ModeLabel)</option>
                        }
                    </select>

                    <p class="role-mode-hint" data-role-mode-hint>Chọn quyền để xem yêu cầu ký và phạm vi áp dụng.</p>

                    <p class="role-inline-error" data-role-error hidden></p>

                    <button type="submit" class="btn primary">Cấp quyền</button>
                </form>
            </div>

            <div class="role-card">
                <div class="role-card__header">
                    <div class="role-chip danger">Thu hồi quyền</div>
                    <h2>Gỡ quyền khỏi ví</h2>
                </div>
                <form action="/admin/AdminRoles/RevokeRole" method="post" class="role-form" autocomplete="off" data-blockchain-ready="@(Model.BlockchainStatus.ReadyForTransactions.ToString().ToLower())" data-role-action="revoke">
                    @Html.AntiForgeryToken()
                    @if (!Model.BlockchainStatus.ReadyForTransactions)
                    {
                        <p class="role-client-note">
                            Hoạt động thu hồi chỉ yêu cầu ký MetaMask đối với quyền On-chain @onchainList. Các quyền Off-chain được cập nhật trực tiếp trong cơ sở dữ liệu.
                        </p>
                    }

                    <label for="revoke-wallet">Địa chỉ ví</label>
                    <input id="revoke-wallet" name="WalletAddress" value="@Model.RevokeWalletInput" placeholder="0x..." required />

                    <label for="revoke-role">Chọn quyền</label>
                    <select id="revoke-role" name="Role" required>
                        <option value="" disabled @(Model.SelectedRevokeRole.HasValue ? string.Empty : "selected") hidden>Chọn quyền</option>
                        @foreach (var option in Model.AvailableRoles)
                        {
                            var isSelected = Model.SelectedRevokeRole.HasValue && Model.SelectedRevokeRole.Value == option.Role;
                            <option value="@option.Value"
                                    data-label="@option.Label"
                                    data-requires-signature="@option.RequiresSignature.ToString().ToLower()"
                                    data-mode-label="@option.ModeLabel"
                                    data-mode-description="@option.ModeDescription"
                                    data-category="@option.Category"
                                    @(isSelected ? "selected" : string.Empty)>@option.Label (@option.ModeLabel)</option>
                        }
                    </select>

                    <p class="role-mode-hint" data-role-mode-hint>Chọn quyền để xem yêu cầu ký và phạm vi áp dụng.</p>

                    <p class="role-inline-error" data-role-error hidden></p>

                    <button type="submit" class="btn ghost">Thu hồi quyền</button>
                </form>
            </div>
        </div>

        <aside class="role-hints">
            <h3>Ghi chú nhanh</h3>
            <ul>
                @foreach (var option in Model.AvailableRoles)
                {
                    <li>
                        <strong>@option.Label:</strong> @option.Description
                        <span class="role-mode-tag @(option.RequiresSignature ? "onchain" : "offchain")">@option.ModeLabel</span>
                    </li>
                }
                <li>Ví thực thi giao dịch phải có <code>DEFAULT_ADMIN_ROLE</code> và đủ BNB để trả phí gas.</li>
                <li>Sau khi cập nhật quyền, yêu cầu người dùng đăng nhập lại để cập nhật phiên.</li>
            </ul>
        </aside>
        
        <section class="role-staff">
            <div class="role-staff__header">
                <h3>Danh sách nhân sự hiện có</h3>
                <span class="badge">@Model.StaffMembers.Count</span>
            </div>

            @if (Model.StaffMembers.Count > 0)
            {
                <div class="table-wrapper">
                    <table class="role-table">
                        <thead>
                            <tr>
                                <th>Họ tên</th>
                                <th>Ví</th>
                                <th>Quyền</th>
                                <th>Email</th>
                                <th>Tham gia</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var member in Model.StaffMembers)
                            {
                                <tr>
                                    <td>
                                        <strong>@(string.IsNullOrWhiteSpace(member.Name) ? "(Chưa cập nhật)" : member.Name)</strong>
                                    </td>
                                    <td>
                                        <code>@member.WalletAddress</code>
                                    </td>
                                    <td class="role-pill">@member.Role</td>
                                    <td>@member.Email</td>
                                    <td>@member.CreatedAt.ToLocalTime().ToString("dd/MM/yyyy")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="empty-state">
                    <ion-icon name="people-circle-outline"></ion-icon>
                    <p>Chưa có nhân sự nào được phân quyền.</p>
                </div>
            }
        </section>
    </section>
</div>

@section Styles {
    <style>
        .role-main {
            display: flex;
            flex-direction: column;
            gap: 24px;
            padding-bottom: 32px;
        }

        .role-topbar {
            display: flex;
            align-items: center;
            gap: 16px;
            background: var(--white);
            border-radius: 12px;
            padding: 12px 18px;
            box-shadow: var(--shadow);
        }

        .role-breadcrumb {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            color: var(--gray-dark);
            font-weight: 500;
        }

        .role-panel {
            display: grid;
            gap: 24px;
            background: var(--white);
            border-radius: 18px;
            padding: 28px 30px;
            box-shadow: var(--shadow-lg);
        }

        .role-mode-overview {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
            gap: 18px;
        }

        .mode-card {
            border-radius: 16px;
            padding: 18px 20px;
            border: 1px solid rgba(37, 99, 235, 0.16);
            background: rgba(37, 99, 235, 0.08);
            display: grid;
            gap: 12px;
            box-shadow: 0 10px 30px -20px rgba(37, 99, 235, 0.6);
        }

        .mode-card.offchain {
            border-color: rgba(16, 185, 129, 0.16);
            background: rgba(16, 185, 129, 0.08);
            box-shadow: 0 10px 30px -20px rgba(16, 185, 129, 0.6);
        }

        .mode-card__header {
            display: flex;
            align-items: center;
            gap: 12px;
            font-size: 0.95rem;
            color: var(--black1);
        }

        .mode-card__body {
            margin: 0;
            color: var(--gray-dark);
            font-size: 0.9rem;
            line-height: 1.45;
        }

        .mode-badge {
            display: inline-flex;
            align-items: center;
            gap: 6px;
            font-size: 0.75rem;
            text-transform: uppercase;
            letter-spacing: 0.08em;
            font-weight: 700;
            border-radius: 999px;
            padding: 5px 12px;
            background: rgba(37, 99, 235, 0.16);
            color: #1d4ed8;
        }

        .mode-card.offchain .mode-badge {
            background: rgba(16, 185, 129, 0.18);
            color: #0f766e;
        }

        .role-mode-hint {
            margin: 6px 0 0;
            font-size: 0.82rem;
            color: var(--gray-dark);
        }

        .role-mode-hint[data-mode="onchain"] {
            color: #1d4ed8;
        }

        .role-mode-hint[data-mode="offchain"] {
            color: #0f766e;
        }

        .role-blockchain-status {
            border: 1px solid #e2e8f0;
            border-radius: 16px;
            padding: 20px 24px;
            display: grid;
            gap: 16px;
            background: rgba(59, 130, 246, 0.08);
        }

        .role-blockchain-status.blocked {
            background: rgba(239, 68, 68, 0.08);
            border-color: rgba(239, 68, 68, 0.32);
        }

        .role-blockchain-status header {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .role-blockchain-status h2 {
            margin: 0;
            font-size: 1.15rem;
        }

        .status-indicator {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            border-radius: 999px;
            padding: 6px 14px;
            font-weight: 700;
            font-size: 0.85rem;
            text-transform: uppercase;
        }

        .status-indicator.ok {
            background: rgba(22, 163, 74, 0.16);
            color: #15803d;
        }

        .status-indicator.error {
            background: rgba(239, 68, 68, 0.16);
            color: #b91c1c;
        }

        .status-grid {
            display: grid;
            grid-template-columns: repeat(2, minmax(0, 1fr));
            gap: 16px;
        }

        .status-grid .label {
            display: block;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.08em;
            color: #64748b;
        }

        .status-list {
            border-radius: 12px;
            padding: 14px 16px;
            border: 1px dashed rgba(15, 23, 42, 0.15);
            background: rgba(255, 255, 255, 0.65);
        }

        .status-list h3 {
            margin: 0 0 8px;
            font-size: 0.95rem;
        }

        .status-list ul {
            margin: 0;
            padding-left: 20px;
            display: grid;
            gap: 6px;
            color: #1f2937;
        }

        .status-list.issues {
            border-color: rgba(239, 68, 68, 0.4);
            background: rgba(254, 226, 226, 0.65);
            color: #991b1b;
        }

        .status-list.warnings {
            border-color: rgba(217, 119, 6, 0.4);
            background: rgba(254, 243, 199, 0.65);
            color: #92400e;
        }

        .status-help {
            margin: 0;
            font-size: 0.9rem;
            line-height: 1.5;
            color: #0f172a;
        }

        .role-mode-tag {
            display: inline-flex;
            align-items: center;
            margin-left: 8px;
            padding: 3px 10px;
            border-radius: 999px;
            font-size: 0.7rem;
            font-weight: 700;
            letter-spacing: 0.06em;
            text-transform: uppercase;
        }

        .role-mode-tag.onchain {
            background: rgba(37, 99, 235, 0.18);
            color: #1d4ed8;
        }

        .role-mode-tag.offchain {
            background: rgba(16, 185, 129, 0.2);
            color: #047857;
        }

        .wallet-connect {
            display: flex;
            flex-wrap: wrap;
            gap: 12px;
            align-items: center;
            padding: 12px 16px;
            border: 1px dashed rgba(37, 99, 235, 0.35);
            border-radius: 12px;
            background: rgba(37, 99, 235, 0.12);
        }

        .wallet-connect .btn.wallet {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            background: linear-gradient(120deg, #1d4ed8, #4338ca);
            color: #fff;
            box-shadow: 0 10px 24px rgba(59, 130, 246, 0.28);
        }

        .wallet-connect__details {
            display: grid;
            gap: 4px;
            color: #1e3a8a;
            font-size: 0.9rem;
        }

        .wallet-connect__details .wallet-label {
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 0.06em;
            font-size: 0.72rem;
        }

        .wallet-address {
            font-family: "JetBrains Mono", monospace;
            font-weight: 600;
        }

        .wallet-network {
            font-size: 0.85rem;
        }

        .role-client-note {
            margin: 0 0 8px;
            padding: 10px 12px;
            border-radius: 10px;
            background: rgba(37, 99, 235, 0.08);
            color: #1e3a8a;
            font-size: 0.9rem;
            line-height: 1.45;
        }

        .role-header h1 {
            margin: 0 0 6px;
            font-size: 1.9rem;
            color: var(--blue);
        }

        .role-header p {
            margin: 0;
            color: #475569;
            line-height: 1.45;
        }

        .role-alert {
            padding: 14px 16px;
            border-radius: 12px;
            font-weight: 600;
            border: 1px solid transparent;
        }

        .role-alert.success {
            background: #dcfce7;
            border-color: #bbf7d0;
            color: #15803d;
        }

        .role-alert.danger {
            background: #fee2e2;
            border-color: #fecaca;
            color: #b91c1c;
        }

        .role-alert.warning {
            background: #fef3c7;
            border-color: #fde68a;
            color: #92400e;
        }

        .role-grid {
            display: grid;
            grid-template-columns: repeat(2, minmax(0, 1fr));
            gap: 22px;
        }

        .role-card {
            border: 1px solid #e2e8f0;
            border-radius: 16px;
            padding: 22px;
            display: grid;
            gap: 16px;
            background: var(--gray-light);
            box-shadow: var(--shadow);
        }

        .role-card__header {
            display: grid;
            gap: 10px;
        }

        .role-card h2 {
            margin: 0;
            font-size: 1.25rem;
            color: #0f172a;
        }

        .role-chip {
            display: inline-flex;
            align-items: center;
            gap: 6px;
            padding: 6px 12px;
            border-radius: 999px;
            background: rgba(37, 99, 235, 0.16);
            color: #1d4ed8;
            font-size: 0.78rem;
            font-weight: 600;
            letter-spacing: 0.04em;
            text-transform: uppercase;
        }

        .role-chip.danger {
            background: rgba(239, 68, 68, 0.16);
            color: #b91c1c;
        }

        .role-form {
            display: grid;
            gap: 12px;
        }

        .role-form label {
            font-size: 0.84rem;
            font-weight: 600;
            color: var(--gray-dark);
            text-transform: uppercase;
            letter-spacing: 0.08em;
        }

        .role-form input,
        .role-form select {
            border-radius: 12px;
            border: 1px solid #cbd5f5;
            padding: 12px 14px;
            font-size: 0.95rem;
            background: var(--white);
            color: #0f172a;
            transition: border 0.18s ease, box-shadow 0.18s ease;
        }

        .role-form input:focus,
        .role-form select:focus {
            outline: none;
            border-color: var(--blue);
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.18);
        }

        .btn {
            border: none;
            border-radius: 12px;
            font-weight: 700;
            font-size: 0.95rem;
            padding: 12px 16px;
            cursor: pointer;
            transition: transform 0.18s ease, box-shadow 0.18s ease;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }

        .btn.primary {
            background: linear-gradient(120deg, #2563eb, #4f46e5);
            color: var(--white);
            box-shadow: 0 14px 32px rgba(59, 130, 246, 0.32);
        }

        .btn.ghost {
            background: rgba(30, 64, 175, 0.1);
            color: #1d4ed8;
            border: 1px solid rgba(30, 64, 175, 0.22);
        }

        .btn:hover {
            transform: translateY(-1px);
        }

        .btn.primary:hover {
            box-shadow: 0 18px 40px rgba(59, 130, 246, 0.38);
        }

        .btn:disabled {
            opacity: 0.7;
            cursor: progress;
            box-shadow: none;
            transform: none;
        }

        .btn .spinner {
            width: 18px;
            height: 18px;
            border-radius: 999px;
            border: 2px solid rgba(255, 255, 255, 0.6);
            border-top-color: rgba(255, 255, 255, 0.18);
            animation: role-spin 0.85s linear infinite;
        }

        .btn.ghost .spinner {
            border-color: rgba(29, 78, 216, 0.6);
            border-top-color: rgba(29, 78, 216, 0.18);
        }

        .role-hints {
            border-radius: 16px;
            border: 1px dashed rgba(37, 99, 235, 0.4);
            padding: 18px 22px;
            background: rgba(37, 99, 235, 0.08);
            color: #0f172a;
        }

        .role-hints h3 {
            margin: 0 0 10px;
            font-size: 1rem;
        }

        .role-hints ul {
            margin: 0;
            padding-left: 18px;
            display: grid;
            gap: 8px;
            line-height: 1.5;
        }

        .role-hints code {
            font-family: "JetBrains Mono", monospace;
            background: rgba(15, 23, 42, 0.12);
            border-radius: 6px;
            padding: 2px 4px;
        }

        .role-staff {
            display: grid;
            gap: 16px;
            background: var(--white);
            border: 1px solid #e2e8f0;
            border-radius: 16px;
            padding: 22px;
        }

        .role-staff__header {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .role-staff__header h3 {
            margin: 0;
            font-size: 1.1rem;
            color: #0f172a;
        }

        .badge {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            min-width: 26px;
            padding: 4px 10px;
            border-radius: 999px;
            background: rgba(37, 99, 235, 0.12);
            color: #1d4ed8;
            font-weight: 600;
            font-size: 0.85rem;
        }

        .table-wrapper {
            overflow-x: auto;
        }

        .role-table {
            width: 100%;
            border-collapse: collapse;
        }

        .role-table th,
        .role-table td {
            text-align: left;
            padding: 12px 14px;
            border-bottom: 1px solid #e2e8f0;
        }

        .role-table th {
            font-size: 0.85rem;
            text-transform: uppercase;
            letter-spacing: 0.08em;
            color: #64748b;
        }

        .role-table tbody tr:hover {
            background: rgba(37, 99, 235, 0.06);
        }

        .role-table code {
            font-family: "JetBrains Mono", monospace;
            font-size: 0.85rem;
            background: rgba(15, 23, 42, 0.1);
            padding: 2px 6px;
            border-radius: 6px;
        }

        .role-pill {
            font-weight: 600;
            color: #1d4ed8;
        }

        .empty-state {
            display: grid;
            justify-items: center;
            gap: 8px;
            padding: 32px 16px;
            color: #64748b;
            border: 1px dashed #cbd5f5;
            border-radius: 12px;
            background: rgba(37, 99, 235, 0.04);
        }

        .empty-state ion-icon {
            font-size: 2rem;
        }

        .role-inline-error {
            margin: 4px 0 0;
            font-size: 0.84rem;
            font-weight: 600;
            color: #b91c1c;
            min-height: 18px;
        }

        @@keyframes role-spin {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }
    </style>
}
