
@using System.Linq
@using System.Text.Json
@model InvestDapp.Application.AdminDashboard.AdminDashboardData
@{
    ViewData["Title"] = ViewData["Title"] ?? "Admin Dashboard";
    Layout = "~/Areas/admin/Views/Shared/_Layout.cshtml";
}

<!-- ========================= Main ==================== -->
<div class="main">
    <div class="topbar">
        <div class="toggle">
            <ion-icon name="menu-outline"></ion-icon>
        </div>
        <div class="search">
            <label>
                <input type="text" placeholder="Tìm kiếm nhanh...">
                <ion-icon name="search-outline"></ion-icon>
            </label>
        </div>
        <div class="user">
            <button type="button" class="admin-logout-btn" data-admin-logout>
                <ion-icon name="log-out-outline"></ion-icon>
                <span>Đăng xuất</span>
            </button>
        </div>
    </div>

    <!-- ======================= Header ================== -->
    <div class="dashboard-header">
        <div class="header-content">
            <div class="header-left">
                <h1>Tổng quan nền tảng</h1>
                <p>Những chỉ số nổi bật giúp bạn theo dõi hoạt động nhanh chóng.</p>
            </div>
            <div class="header-right">
                <div class="date-time">
                    <span class="date">@DateTime.Now.ToString("dddd, MMMM dd, yyyy")</span>
                    <span class="time">@DateTime.Now.ToString("HH:mm")</span>
                </div>
                <div class="quick-links">
                    <a class="quick-link" href="@Url.Action("Index", "Manage_Campaigns", new { area = "admin" })">Quản lý chiến dịch</a>
                    <a class="quick-link" href="@Url.Action("Index", "KycManagement", new { area = "admin" })">Xét duyệt KYC</a>
                </div>
            </div>
        </div>
    </div>

    <!-- ======================= Overview Cards ================== -->
    <div class="overview-section">
        <div class="section-title">
            <h2>Platform Overview</h2>
            <p>Key metrics and performance indicators</p>
        </div>
        
        <div class="cardBox">
            <div class="card active-campaigns">
                <div class="card-content">
                    <div class="numbers">@Model.Summary.ActiveCampaigns</div>
                    <div class="cardName">Chiến dịch đang hoạt động</div>
                    <div class="trend">
                        <ion-icon name="trending-up-outline"></ion-icon>
                        <span>@Model.Summary.TotalCampaigns tổng cộng</span>
                    </div>
                </div>
                <div class="iconBx">
                    <ion-icon name="rocket-outline"></ion-icon>
                </div>
            </div>

            <div class="card total-investors">
                <div class="card-content">
                    <div class="numbers">@Model.Summary.TotalInvestors</div>
                    <div class="cardName">Nhà đầu tư</div>
                    <div class="trend">
                        <ion-icon name="trending-up-outline"></ion-icon>
                        <span>@Model.Summary.CompletedCampaigns chiến dịch hoàn tất</span>
                    </div>
                </div>
                <div class="iconBx">
                    <ion-icon name="people-outline"></ion-icon>
                </div>
            </div>

            <div class="card total-investment">
                <div class="card-content">
                    <div class="numbers">@($"{Model.Summary.TotalInvestment:N2} BNB")</div>
                    <div class="cardName">Tổng vốn đầu tư</div>
                    <div class="trend">
                        <ion-icon name="cash-outline"></ion-icon>
                        <span>Refund: @($"{Model.Summary.TotalRefund:N2} BNB")</span>
                    </div>
                </div>
                <div class="iconBx">
                    <ion-icon name="wallet-outline"></ion-icon>
                </div>
            </div>

            <div class="card avg-roi">
                <div class="card-content">
                    <div class="numbers">@($"{Model.Summary.EstimatedProfit:N2} BNB")</div>
                    <div class="cardName">Lợi nhuận dự kiến (4%)</div>
                    <div class="trend">
                        <ion-icon name="star-outline"></ion-icon>
                        <span>@Model.Summary.CompletedCampaigns chiến dịch thành công</span>
                    </div>
                </div>
                <div class="iconBx">
                    <ion-icon name="trending-up-outline"></ion-icon>
                </div>
            </div>
        </div>
    </div>

    <!-- ======================= Quick Stats ================== -->
    <div class="quick-stats">
        <div class="stat-item">
            <div class="stat-number">@Model.QuickStats.PendingKycs</div>
            <div class="stat-label">KYC đang chờ</div>
            <div class="stat-action">
                <a href="@Url.Action("Index", "KycManagement", new { area = "admin" })">Xem</a>
            </div>
        </div>
        <div class="stat-item">
            <div class="stat-number">@Model.QuickStats.CampaignsEndingSoon</div>
            <div class="stat-label">Sắp kết thúc</div>
            <div class="stat-action">
                <a href="@Url.Action("Index", "Manage_Campaigns", new { area = "admin" })">Danh sách</a>
            </div>
        </div>
        <div class="stat-item">
            <div class="stat-number">@($"{Model.QuickStats.PendingWithdrawalAmount:N2} BNB")</div>
            <div class="stat-label">Chờ rút (BNB)</div>
            <div class="stat-action">
                <a href="@Url.Action("Index", "Transactions", new { area = "admin" })">Xem thống kê</a>
            </div>
        </div>
        <div class="stat-item">
            <div class="stat-number">@Model.QuickStats.NewMessages</div>
            <div class="stat-label">Tin nhắn mới</div>
            <div class="stat-action">
                <a href="@Url.Action("Index", "Dashboard", new { area = "admin" })">Xem</a>
            </div>
        </div>
        <div class="stat-item">
            <div class="stat-number">@Model.QuickStats.UnresolvedSupportTickets</div>
            <div class="stat-label">Ticket hỗ trợ mở</div>
            <div class="stat-action">
                <a href="@Url.Action("Index", "Support", new { area = "admin", scope = "inbox" })">Xử lý</a>
            </div>
        </div>
        <div class="stat-item">
            <div class="stat-number">@Model.QuickStats.NewUsers</div>
            <div class="stat-label">Người dùng mới (30 ngày)</div>
            <div class="stat-action">
                <a href="@Url.Action("Index", "Dashboard", new { area = "admin" })">Theo dõi</a>
            </div>
        </div>
    </div>

    <!-- ================ Main Dashboard Content ================= -->
    <div class="dashboard-content">
        <!-- Left Column -->
        <div class="left-column">
            <!-- Recent Campaigns -->
            <div class="section-card">
                <div class="cardHeader">
                    <div class="header-info">
                        <h2>Recent Campaigns</h2>
                        <p>Latest investment opportunities</p>
                    </div>
                    <div class="header-actions">
                        <a href="@Url.Action("Index", "Manage_Campaigns", new { area = "admin" })" class="header-link">Quản lý</a>
                    </div>
                </div>

                <div class="table-container">
                    <table class="modern-table">
                        <thead>
                            <tr>
                                <th>Campaign</th>
                                <th>Target</th>
                                <th>Raised</th>
                                <th>Progress</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (!Model.RecentCampaigns.Any())
                            {
                                <tr>
                                    <td colspan="6" style="text-align:center;color:var(--gray);padding:2rem;">Chưa có chiến dịch nào.</td>
                                </tr>
                            }
                            else
                            {
                                foreach (var campaign in Model.RecentCampaigns)
                                {
                                    var statusKey = campaign.Status?.ToLowerInvariant() ?? string.Empty;
                                    var statusClass = statusKey switch
                                    {
                                        "active" => "delivered",
                                        "completed" => "delivered",
                                        "pending" => "pending",
                                        "pendingapproval" => "pending",
                                        "voting" => "inProgress",
                                        _ => "inProgress"
                                    };
                                    <tr>
                                        <td>
                                            <div class="campaign-info">
                                                <div class="campaign-avatar">
                                                    <ion-icon name="briefcase-outline"></ion-icon>
                                                </div>
                                                <div class="campaign-details">
                                                    <strong>@campaign.Name</strong>
                                                    <span>@campaign.OwnerAddress</span>
                                                </div>
                                            </div>
                                        </td>
                                        <td>@campaign.GoalAmount.ToString("N2")</td>
                                        <td>@campaign.RaisedAmount.ToString("N2")</td>
                                        <td>
                                            <div class="progress-bar">
                                                <div class="progress-fill" style="width:@campaign.ProgressPercentage%"></div>
                                            </div>
                                            <span class="progress-text">@campaign.ProgressPercentage.ToString("N0")%</span>
                                        </td>
                                        <td><span class="status @statusClass">@campaign.Status</span></td>
                                        <td>
                                            <div class="action-buttons">
                                                <a class="btn-icon" title="Chi tiết" href="@Url.Action("Details", "Manage_Campaigns", new { area = "admin", id = campaign.Id })">
                                                    <ion-icon name="eye-outline"></ion-icon>
                                                </a>
                                                <a class="btn-icon" title="Quản lý" href="@Url.Action("Index", "Manage_Campaigns", new { area = "admin" })">
                                                    <ion-icon name="settings-outline"></ion-icon>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Performance Chart -->
            <div class="section-card chart-section">
                <div class="cardHeader">
                    <div class="header-info">
                        <h2>Investment Performance</h2>
                        <p>Diễn biến dòng tiền 6 tháng gần nhất</p>
                    </div>
                </div>
                <div class="chart-placeholder" id="trendChart"></div>
            </div>
        </div>

        <!-- Right Column -->
        <div class="right-column">
            <!-- Recent Activities -->
            <div class="section-card activities-section">
                <div class="cardHeader">
                    <div class="header-info">
                        <h2>Hoạt động gần đây</h2>
                        <p>Những cập nhật mới nhất</p>
                    </div>
                </div>

                <div class="activities-list">
                    @if (!Model.RecentActivities.Any())
                    {
                        <div class="empty-state">Không có hoạt động gần đây.</div>
                    }
                    else
                    {
                        foreach (var activity in Model.RecentActivities)
                        {
                            <div class="activity-item">
                                <div class="activity-icon @activity.Tone">
                                    <ion-icon name="@activity.Icon"></ion-icon>
                                </div>
                                <div class="activity-content">
                                    <div class="activity-title">@activity.Title</div>
                                    <div class="activity-description">@activity.Description</div>
                                    <div class="activity-time">@activity.OccurredAt.ToLocalTime().ToString("dd/MM/yyyy HH:mm")</div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>

            <!-- Top Investors -->
            <div class="section-card top-investors">
                <div class="cardHeader">
                    <div class="header-info">
                        <h2>Nhà đầu tư nổi bật</h2>
                        <p>Top đóng góp trong kỳ</p>
                    </div>
                </div>
                <div class="investors-list">
                    @if (!Model.TopInvestors.Any())
                    {
                        <div class="empty-state">Chưa có dữ liệu nhà đầu tư.</div>
                    }
                    else
                    {
                        var rank = 1;
                        foreach (var investor in Model.TopInvestors)
                        {
                            var walletAddress = investor.WalletAddress ?? string.Empty;
                            var displayName = !string.IsNullOrWhiteSpace(investor.DisplayName)
                                ? investor.DisplayName
                                : (walletAddress.Length > 12
                                    ? $"{walletAddress.Substring(0, 6)}...{walletAddress.Substring(walletAddress.Length - 4)}"
                                    : walletAddress);

                            if (string.IsNullOrWhiteSpace(displayName))
                            {
                                displayName = "--";
                            }
                            <div class="investor-item">
                                <div class="investor-rank">@rank</div>
                                <div class="investor-info">
                                    <div class="investor-name">@displayName</div>
                                    <div class="investor-amount">@investor.TotalInvestment.ToString("N2") BNB</div>
                                </div>
                            </div>
                            rank++;
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="section-card risk-section risk-full-width">
        <div class="cardHeader">
            <div class="header-info">
                <h2>Giám sát rủi ro &amp; tuân thủ</h2>
                <p>Phát hiện bất thường và theo dõi backlog KYC</p>
            </div>
        </div>

        <div class="risk-panels">
            <div class="risk-panel">
                <div class="panel-title">Giao dịch tăng đột biến</div>
                @if (!Model.RiskInsights.TransactionSpikes.Any())
                {
                    <div class="empty-state">Không có cảnh báo.</div>
                }
                else
                {
                    <ul class="risk-list">
                        @foreach (var alert in Model.RiskInsights.TransactionSpikes)
                        {
                            <li>
                                <div class="risk-primary">@alert.CampaignName</div>
                                <div class="risk-meta">24h: @alert.Last24hAmount.ToString("N2") BNB • TB 6 ngày: @alert.AverageDailyAmount.ToString("N2") BNB</div>
                                <div class="risk-meta">Tăng @(double.IsInfinity(alert.SpikeRatio) ? "∞" : alert.SpikeRatio.ToString("N1")) lần • Cập nhật @alert.LastInvestmentAt.ToLocalTime().ToString("dd/MM HH:mm")</div>
                            </li>
                        }
                    </ul>
                }
            </div>

            <div class="risk-panel">
                <div class="panel-title">Ví trùng lặp</div>
                @if (!Model.RiskInsights.DuplicateWallets.Any())
                {
                    <div class="empty-state">Không có ví bất thường.</div>
                }
                else
                {
                    <ul class="risk-list">
                        @foreach (var wallet in Model.RiskInsights.DuplicateWallets)
                        {
                            <li>
                                <div class="risk-primary">@wallet.WalletAddress</div>
                                <div class="risk-meta">Tham gia @wallet.CampaignCount chiến dịch • Tổng: @wallet.TotalAmount.ToString("N2") BNB</div>
                                <div class="risk-meta">Chiến dịch gần đây: @string.Join(", ", wallet.SampleCampaigns)</div>
                            </li>
                        }
                    </ul>
                }
            </div>
        </div>

        <div class="risk-panels">
            <div class="risk-panel">
                <div class="panel-title">Yêu cầu rút bất thường</div>
                @if (!Model.RiskInsights.WithdrawalAlerts.Any())
                {
                    <div class="empty-state">Không có chiến dịch nào đáng chú ý.</div>
                }
                else
                {
                    <ul class="risk-list">
                        @foreach (var alert in Model.RiskInsights.WithdrawalAlerts)
                        {
                            <li>
                                <div class="risk-primary">@alert.CampaignName</div>
                                <div class="risk-meta">Đang chờ: @alert.PendingCount • Tổng 7 ngày: @alert.TotalLast7Days</div>
                                <div class="risk-meta">Mới nhất: @alert.LastRequestAt.ToLocalTime().ToString("dd/MM HH:mm")</div>
                            </li>
                        }
                    </ul>
                }
            </div>

            <div class="risk-panel kyc-panel">
                <div class="panel-title">Tồn đọng KYC</div>
                <div class="kyc-overview">
                    <div>
                        <span class="label">Đang chờ</span>
                        <strong>@Model.RiskInsights?.KycBacklog?.PendingCount</strong>
                    </div>
                    <div>
                        <span class="label">TB ngày chờ</span>
                        <strong>@Model.RiskInsights?.KycBacklog?.AveragePendingDays.ToString("N1")</strong>
                    </div>
                    <div>
                        <span class="label">Tỉ lệ duyệt</span>
                        <strong>@Model.RiskInsights?.KycBacklog?.ApprovalRate.ToString("N1")%</strong>
                    </div>
                    <div>
                        <span class="label">Tỉ lệ từ chối</span>
                        <strong>@Model.RiskInsights?.KycBacklog?.RejectionRate.ToString("N1")%</strong>
                    </div>
                </div>

                <div class="kyc-breakdown">
                    <div class="sub-title">Theo loại tài khoản</div>
                    @if (Model.RiskInsights?.KycBacklog?.PendingByAccountType == null || !Model.RiskInsights.KycBacklog.PendingByAccountType.Any())
                    {
                        <div class="empty-state">Không có hồ sơ chờ.</div>
                    }
                    else
                    {
                        <ul class="risk-list compact">
                            @foreach (var stat in Model.RiskInsights.KycBacklog.PendingByAccountType)
                            {
                                <li>
                                    <div class="risk-primary">@stat.AccountType</div>
                                    <div class="risk-meta">@stat.PendingCount hồ sơ • TB @stat.AveragePendingDays.ToString("N1") ngày</div>
                                </li>
                            }
                        </ul>
                    }
                </div>

                <div class="kyc-breakdown">
                    <div class="sub-title">Hồ sơ chờ lâu nhất</div>
                    @if (Model.RiskInsights?.KycBacklog?.OldestPending == null || !Model.RiskInsights.KycBacklog.OldestPending.Any())
                    {
                        <div class="empty-state">Không có hồ sơ tồn.</div>
                    }
                    else
                    {
                        <ul class="risk-list compact">
                            @foreach (var pending in Model.RiskInsights.KycBacklog.OldestPending)
                            {
                                <li>
                                    <div class="risk-primary">@pending.WalletAddress</div>
                                    <div class="risk-meta">@pending.AccountType • @pending.PendingDays.ToString("N1") ngày • Gợi ý: @pending.SuggestedReviewer</div>
                                </li>
                            }
                        </ul>
                    }
                </div>

                <div class="kyc-breakdown">
                    <div class="sub-title">Lý do bị trả nhiều nhất</div>
                    @if (Model.RiskInsights?.KycBacklog?.RejectionReasons == null || !Model.RiskInsights.KycBacklog.RejectionReasons.Any())
                    {
                        <div class="empty-state">Chưa có dữ liệu từ chối.</div>
                    }
                    else
                    {
                        <ul class="risk-list compact">
                            @foreach (var reason in Model.RiskInsights.KycBacklog.RejectionReasons)
                            {
                                <li>
                                    <div class="risk-primary">@reason.Reason</div>
                                    <div class="risk-meta">@reason.Count hồ sơ</div>
                                </li>
                            }
                        </ul>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Dashboard Header Styles */
    .dashboard-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 2rem;
        border-radius: 15px;
        margin-bottom: 2rem;
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .header-left h1 {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }

    .header-left p {
        opacity: 0.9;
        font-size: 1.1rem;
    }

    .header-right {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        align-items: flex-end;
    }

    .date-time {
        text-align: right;
    }

    .date-time .date {
        display: block;
        font-size: 1rem;
        opacity: 0.9;
    }

    .date-time .time {
        display: block;
        font-size: 1.2rem;
        font-weight: 600;
    }

    .quick-links {
        display: flex;
        gap: 0.75rem;
        flex-wrap: wrap;
        justify-content: flex-end;
    }

    .quick-link {
        color: white;
        text-decoration: none;
        padding: 0.6rem 1rem;
        border-radius: 8px;
        border: 1px solid rgba(255,255,255,0.45);
        background: rgba(255,255,255,0.08);
        font-weight: 600;
        transition: all 0.2s ease;
    }

    .quick-link:hover {
        background: rgba(255,255,255,0.18);
    }

    .header-link {
        background: var(--blue);
        color: white;
        text-decoration: none;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        font-weight: 600;
        transition: filter 0.2s ease;
    }

    .header-link:hover {
        filter: brightness(0.9);
    }

    /* Section Title */
    .section-title {
        margin-bottom: 1.5rem;
    }

    .section-title h2 {
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--dark);
        margin-bottom: 0.25rem;
    }

    .section-title p {
        color: #4b5563;
        font-size: 0.9rem;
    }

    /* Enhanced Card Styles */
    .overview-section .cardBox {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .overview-section .card {
        background: white;
        border-radius: 15px;
        padding: 1.5rem;
        box-shadow: 0 4px 20px rgba(0,0,0,0.08);
        border: 1px solid rgba(0,0,0,0.05);
        transition: all 0.3s;
        position: relative;
        overflow: hidden;
    }

    .overview-section .card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #667eea, #764ba2);
    }

    .overview-section .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 30px rgba(0,0,0,0.12);
    }

    .card-content {
        flex: 1;
    }

    .card-content .numbers {
        font-size: 2.5rem;
        font-weight: 700;
        color: var(--dark);
        margin-bottom: 0.5rem;
    }

    .card-content .cardName {
        font-size: 1rem;
        color: #4b5563;
        font-weight: 600;
        margin-bottom: 0.75rem;
    }

    .trend {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: #2563eb;
        font-size: 0.875rem;
        font-weight: 600;
    }

    .trend ion-icon {
        font-size: 1.2rem;
    }

    /* Quick Stats */
    .quick-stats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin-bottom: 2rem;
    }

    .stat-item {
        background: white;
        padding: 1.25rem;
        border-radius: 12px;
        text-align: center;
        box-shadow: 0 2px 10px rgba(37,99,235,0.08);
        border: 1px solid rgba(37,99,235,0.12);
    }

    .stat-number {
        font-size: 1.75rem;
        font-weight: 700;
        color: #1d4ed8;
        margin-bottom: 0.25rem;
    }

    .stat-label {
        font-size: 0.875rem;
        color: #4b5563;
        margin-bottom: 0.75rem;
    }

    .stat-action a {
        color: #2563eb;
        text-decoration: none;
        font-weight: 600;
        font-size: 0.875rem;
    }

    /* Dashboard Content Layout */
    .dashboard-content {
        display: grid;
        grid-template-columns: minmax(0, 2fr) minmax(0, 1fr);
        gap: 2rem;
        align-items: flex-start;
    }

    .left-column,
    .right-column {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
        min-width: 0;
    }

    .section-card {
        background: white;
        border-radius: 15px;
        padding: 1.5rem;
        box-shadow: 0 4px 20px rgba(0,0,0,0.08);
        border: 1px solid rgba(0,0,0,0.05);
        margin: 0;
    }

    .cardHeader {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .header-info h2 {
        font-size: 1.25rem;
        font-weight: 700;
        color: var(--dark);
        margin-bottom: 0.25rem;
    }

    .header-info p {
        color: #4b5563;
        font-size: 0.875rem;
    }

    .header-actions {
        display: flex;
        gap: 0.75rem;
        align-items: center;
    }

    .filter-btn, .view-all-btn {
        background: var(--gray-light);
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 600;
        color: var(--gray-dark);
        transition: all 0.2s;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .filter-btn:hover, .view-all-btn:hover {
        background: var(--gray);
        color: white;
    }

    /* Modern Table */
    .table-container {
        overflow-x: auto;
    }

    .modern-table {
        width: 100%;
        border-collapse: collapse;
        font-size: 0.9rem;
    }

    .modern-table th {
        background: var(--gray-light);
        color: var(--gray-dark);
        font-weight: 600;
        padding: 1rem 0.75rem;
        text-align: left;
        border-bottom: 2px solid #e5e7eb;
    }

    .modern-table td {
        padding: 1rem 0.75rem;
        border-bottom: 1px solid #e5e7eb;
        vertical-align: middle;
    }

    .modern-table tbody tr:hover {
        background: #f3f4f6;
    }

    .campaign-info {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .campaign-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: var(--blue);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
    }

    .campaign-details strong {
        display: block;
        font-weight: 600;
        color: var(--dark);
        margin-bottom: 0.25rem;
    }

    .campaign-details span {
        color: #4b5563;
        font-size: 0.8rem;
    }

    .progress-bar {
        width: 80px;
        height: 6px;
        background: #e5e7eb;
        border-radius: 3px;
        overflow: hidden;
        margin-bottom: 0.25rem;
    }

    .progress-fill {
        height: 100%;
        background: var(--blue);
        border-radius: 3px;
    }

    .progress-text {
        font-size: 0.8rem;
        color: #4b5563;
        font-weight: 600;
    }

    .action-buttons {
        display: flex;
        gap: 0.5rem;
    }

    .btn-icon {
        width: 32px;
        height: 32px;
        border: none;
        border-radius: 6px;
        background: #eef2ff;
        color: #1d4ed8;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s;
    }

    .btn-icon:hover {
        background: #1d4ed8;
        color: white;
    }

    /* Chart Section */
    .chart-placeholder {
        height: 250px;
        background: var(--gray-light);
        border-radius: 10px;
        padding: 1rem;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
    }

    .trend-meta {
        font-weight: 600;
        color: #1f2937;
        margin-bottom: 0.75rem;
    }

    .trend-bars {
        display: flex;
        align-items: flex-end;
        gap: 0.75rem;
        height: 160px;
    }

    .trend-bar {
        flex: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.8rem;
        color: #4b5563;
    }

    .bar-stack {
        width: 100%;
        background: #e5e7eb;
        border-radius: 8px;
        padding: 0.4rem 0.35rem;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        gap: 0.25rem;
        height: 130px;
    }

    .bar-segment {
        border-radius: 4px;
        transition: opacity 0.2s ease;
    }

    .bar-segment.invest {
        background: var(--blue);
    }

    .bar-segment.refund {
        background: #f87171;
    }

    .bar-label {
        font-weight: 600;
        color: #1f2937;
    }

    .trend-legend {
        display: flex;
        gap: 1.25rem;
        margin-top: 1rem;
        font-size: 0.8rem;
        color: #4b5563;
    }

    .legend-box {
        display: inline-block;
        width: 12px;
        height: 12px;
        border-radius: 3px;
        margin-right: 0.4rem;
    }

    .legend-box.invest {
        background: var(--blue);
    }

    .legend-box.refund {
        background: #f87171;
    }

    .risk-full-width {
        margin-top: 2rem;
    }

    .risk-section .risk-panels {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 1.25rem;
        margin-bottom: 1.25rem;
    }

    .risk-section .risk-panels:last-child {
        margin-bottom: 0;
    }

    .risk-panel {
        background: var(--gray-light);
        border-radius: 12px;
        padding: 1rem 1.25rem;
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
        min-height: 150px;
    }

    .panel-title {
        font-weight: 700;
        color: var(--dark);
    }

    .risk-list {
        list-style: none;
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    .risk-list.compact {
        gap: 0.5rem;
    }

    .risk-list li {
        background: white;
        border-radius: 10px;
        padding: 0.75rem;
        box-shadow: 0 1px 6px rgba(15, 23, 42, 0.08);
    }

    .risk-primary {
        font-weight: 600;
        color: var(--dark);
        margin-bottom: 0.25rem;
        word-break: break-word;
    }

    .risk-meta {
        font-size: 0.85rem;
        color: var(--gray-dark);
        font-weight: 500;
        word-break: break-word;
    }

    .kyc-panel .kyc-overview {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
        gap: 0.75rem;
        background: white;
        border-radius: 10px;
        padding: 0.75rem;
        box-shadow: 0 1px 6px rgba(15, 23, 42, 0.08);
    }

    .kyc-overview .label {
        display: block;
        font-size: 0.75rem;
        color: var(--gray-dark);
        margin-bottom: 0.25rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .kyc-overview strong {
        font-size: 1.1rem;
        color: var(--blue);
    }

    .kyc-breakdown {
        background: white;
        border-radius: 10px;
        padding: 0.75rem;
        box-shadow: 0 1px 6px rgba(15, 23, 42, 0.08);
    }

    .kyc-breakdown + .kyc-breakdown {
        margin-top: 0.75rem;
    }

    .kyc-breakdown .sub-title {
        font-weight: 600;
        color: var(--gray-dark);
        margin-bottom: 0.5rem;
    }

    /* Activities */
    .activities-list {
        max-height: 400px;
        overflow-y: auto;
    }

    .activity-item {
        display: flex;
        gap: 1rem;
        padding: 1rem 0;
        border-bottom: 1px solid #e5e7eb;
    }

    .activity-item:last-child {
        border-bottom: none;
    }

    .activity-content {
        flex: 1;
        min-width: 0;
    }

    .activity-icon {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        flex-shrink: 0;
    }

    .activity-icon.success {
        background: #dcfce7;
        color: #16a34a;
    }

    .activity-icon.info {
        background: #dbeafe;
        color: #2563eb;
    }

    .activity-icon.warning {
        background: #fef3c7;
        color: #d97706;
    }

    .activity-title {
        font-weight: 600;
        color: var(--dark);
        margin-bottom: 0.25rem;
        word-break: break-word;
    }

    .activity-description {
        color: #4b5563;
        font-size: 0.875rem;
        margin-bottom: 0.25rem;
        word-break: break-word;
    }

    .activity-time {
        color: #4b5563;
        font-size: 0.75rem;
        font-weight: 600;
    }

    /* Top Investors */
    .investors-list {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    .investor-item {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 0.75rem;
        background: var(--gray-light);
        border-radius: 8px;
    }

    .investor-info {
        display: flex;
        flex-direction: column;
        flex: 1;
        min-width: 0;
    }

    .investor-rank {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        background: var(--blue);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
        font-size: 0.875rem;
    }

    .investor-name {
        font-weight: 600;
        color: var(--dark);
        margin-bottom: 0.25rem;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .investor-amount {
        color: #4b5563;
        font-size: 0.875rem;
        font-weight: 600;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    /* Responsive Design */
    @@media (max-width: 1200px) {
        .dashboard-content {
            grid-template-columns: 1fr;
        }
    }

    @@media (max-width: 768px) {
        .header-content {
            flex-direction: column;
            text-align: center;
        }

        .quick-links {
            justify-content: center;
        }

        .cardBox {
            grid-template-columns: 1fr;
        }

        .quick-stats {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @@media (max-width: 480px) {
        .dashboard-header {
            padding: 1.5rem;
        }

        .quick-stats {
            grid-template-columns: 1fr;
        }

        .header-actions {
            flex-direction: column;
            width: 100%;
        }

        .filter-btn, .view-all-btn {
            width: 100%;
            justify-content: center;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const chartContainer = document.getElementById('trendChart');
        if (!chartContainer) {
            return;
        }

        try {
            const data = @Html.Raw(JsonSerializer.Serialize(Model.InvestmentTrend ?? new InvestDapp.Application.AdminDashboard.InvestmentTrendData()));
            renderTrendChart(chartContainer, data);
        } catch (error) {
            console.error('Unable to render trend chart', error);
            chartContainer.innerHTML = '<div class="empty-state" style="padding:1.5rem">Không thể hiển thị biểu đồ.</div>';
        }
    });

    function renderTrendChart(container, trendData) {
        if (!trendData) {
            container.innerHTML = '<div class="empty-state" style="padding:1.5rem">Không có dữ liệu để hiển thị.</div>';
            return;
        }

        const pointsSource = Array.isArray(trendData.points)
            ? trendData.points
            : Array.isArray(trendData.Points)
                ? trendData.Points
                : [];

        if (!pointsSource.length) {
            container.innerHTML = '<div class="empty-state" style="padding:1.5rem">Không có dữ liệu để hiển thị.</div>';
            return;
        }

        const safePoints = pointsSource.map(p => ({
            label: p.label ?? p.Label ?? '--',
            investmentTotal: Number((p.investmentTotal ?? p.InvestmentTotal) ?? 0),
            refundTotal: Number((p.refundTotal ?? p.RefundTotal) ?? 0)
        }));

        const maxInvest = Math.max(...safePoints.map(p => p.investmentTotal), 0);
        const maxRefund = Math.max(...safePoints.map(p => p.refundTotal), 0);
        const barMax = Math.max(maxInvest, maxRefund, 1);

        const barsHtml = safePoints.map(point => {
            const investHeight = (point.investmentTotal / barMax) * 100;
            const refundHeight = (point.refundTotal / barMax) * 100;
            return `
                <div class="trend-bar">
                    <span class="bar-label">${point.label}</span>
                    <div class="bar-stack">
                        <div class="bar-segment invest" style="height:${investHeight}%" title="Đầu tư: ${point.investmentTotal.toFixed(2)}"></div>
                        <div class="bar-segment refund" style="height:${refundHeight}%" title="Refund: ${point.refundTotal.toFixed(2)}"></div>
                    </div>
                </div>`;
        }).join('');

    const rangeLabel = trendData.rangeLabel ?? trendData.RangeLabel ?? '';

        container.innerHTML = `
            <div class="trend-meta">Khoảng: ${rangeLabel}</div>
            <div class="trend-bars">${barsHtml}</div>
            <div class="trend-legend">
                <span><span class="legend-box invest"></span> Đầu tư</span>
                <span><span class="legend-box refund"></span> Refund</span>
            </div>`;
    }
</script>