@model IEnumerable<InvestDapp.Shared.Models.CampaignPost>
@{
    ViewData["Title"] = $"Bài Viết - {ViewBag.Campaign?.Name}";
    Layout = "~/Pages/_Layout.cshtml";
    var campaign = ViewBag.Campaign as InvestDapp.Models.Campaign;
}

@section Styles {
    <style>
        /* --- BIẾN MÀU SẮC --- */
        :root {
            --bg-dark: #0a0e1a;
            --bg-light: #12182b;
            --primary: #00aaff;
            --primary-light: #00c6ff;
            --secondary: #272c44;
            --text-color: #e0e0e0;
            --text-muted: #8a93b3;
            --success: #00d4aa;
            --warning: #ffb800;
            --danger: #ff6b6b;
            --gradient: linear-gradient(135deg, var(--primary), var(--primary-light));
        }

        .posts-container {
            max-width: 1200px;
            margin: 120px auto 60px;
            padding: 0 20px;
        }

        .campaign-header {
            background: var(--bg-light);
            border: 1px solid var(--secondary);
            border-radius: 16px;
            padding: 30px;
            margin-bottom: 30px;
        }

        .campaign-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .campaign-details h2 {
            color: var(--primary);
            margin-bottom: 10px;
            font-size: 1.8rem;
        }

        .campaign-meta {
            color: var(--text-muted);
            font-size: 0.9rem;
        }

        .posts-actions {
            display: flex;
            gap: 15px;
        }

        .btn-action {
            padding: 12px 20px;
            border: none;
            border-radius: 8px;
            font-size: 0.9rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .btn-primary {
            background: var(--primary);
            color: white;
        }

            .btn-primary:hover {
                background: var(--primary-light);
                transform: translateY(-1px);
            }

        .btn-secondary {
            background: var(--secondary);
            color: var(--text-color);
            border: 1px solid var(--secondary);
        }

            .btn-secondary:hover {
                background: transparent;
                border-color: var(--primary);
                color: var(--primary);
            }

        .posts-grid {
            display: grid;
            gap: 25px;
        }

        .post-card {
            background: var(--bg-light);
            border: 1px solid var(--secondary);
            border-radius: 16px;
            overflow: hidden;
            transition: all 0.3s ease;
            animation: slideInUp 0.6s ease-out;
        }

            .post-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 8px 25px rgba(0, 170, 255, 0.1);
            }

        .post-header {
            padding: 25px;
            border-bottom: 1px solid var(--secondary);
            position: relative;
        }

        .post-title {
            color: var(--text-color);
            font-size: 1.4rem;
            font-weight: 600;
            margin-bottom: 15px;
            line-height: 1.4;
        }

            .post-title a {
                color: inherit;
                text-decoration: none;
                transition: color 0.3s ease;
            }

                .post-title a:hover {
                    color: var(--primary);
                }

        .post-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 10px;
        }

        .post-info {
            display: flex;
            align-items: center;
            gap: 15px;
            color: var(--text-muted);
            font-size: 0.9rem;
        }

        .post-type {
            padding: 4px 12px;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
        }

        .type-introduction {
            background: rgba(0, 170, 255, 0.2);
            color: var(--primary);
        }

        .type-update {
            background: rgba(0, 212, 170, 0.2);
            color: var(--success);
        }

        .type-achievement {
            background: rgba(255, 184, 0, 0.2);
            color: var(--warning);
        }

        .type-announcement {
            background: rgba(255, 107, 107, 0.2);
            color: var(--danger);
        }

        .post-status {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .status-pending {
            background: rgba(255, 184, 0, 0.2);
            color: var(--warning);
        }

        .status-approved {
            background: rgba(0, 212, 170, 0.2);
            color: var(--success);
        }

        .status-rejected {
            background: rgba(255, 107, 107, 0.2);
            color: var(--danger);
        }

        .post-content {
            padding: 25px;
            color: var(--text-muted);
            line-height: 1.6;
        }

        .post-excerpt {
            max-height: 100px;
            overflow: hidden;
            position: relative;
        }

            .post-excerpt::after {
                content: '...';
                position: absolute;
                bottom: 0;
                right: 0;
                background: var(--bg-light);
                padding-left: 20px;
            }

        .post-actions {
            padding: 20px 25px;
            background: var(--bg-dark);
            border-top: 1px solid var(--secondary);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .post-stats {
            display: flex;
            align-items: center;
            gap: 15px;
            color: var(--text-muted);
            font-size: 0.85rem;
        }

        .empty-state {
            text-align: center;
            padding: 80px 20px;
            color: var(--text-muted);
        }

        .empty-icon {
            font-size: 4rem;
            margin-bottom: 20px;
            opacity: 0.5;
        }

        .empty-title {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 10px;
            color: var(--text-color);
        }

        .empty-description {
            font-size: 1rem;
            line-height: 1.6;
            margin-bottom: 30px;
        }

        /* Responsive */
        @@media (max-width: 768px) {
            .campaign-info {
                flex-direction: column;
                align-items: flex-start;
                gap: 20px;
            }

            .posts-actions {
                width: 100%;
                justify-content: stretch;
            }

            .btn-action {
                flex: 1;
                justify-content: center;
            }

            .post-meta {
                flex-direction: column;
                align-items: flex-start;
            }
        }

        /* Animation */
        @@keyframes slideInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
}

<div class="posts-container">
    <!-- Campaign Header -->
    @if (campaign != null)
    {
        <div class="campaign-header">
            <div class="campaign-info">
                <div class="campaign-details">
                    <h2>@campaign.Name</h2>
                    <div class="campaign-meta">
                        <span><i class="fas fa-calendar-alt"></i> Tạo lúc: @campaign.CreatedAt.ToString("dd/MM/yyyy")</span>
                        <span style="margin-left: 20px;"><i class="fas fa-eye"></i> @(Model?.Count() ?? 0) bài viết</span>
                    </div>
                </div>
                <div class="posts-actions">
                    <a href="@Url.Action("Details", new { id = campaign.Id })" class="btn-action btn-secondary">
                        <i class="fas fa-arrow-left"></i>
                        Quay Lại
                    </a>

                    @{
                        var currentUserWallet = User.FindFirst("WalletAddress")?.Value;
                        var isOwner = currentUserWallet == campaign.OwnerAddress;
                        var existingPosts = Model?.Any() ?? false;

                        var canCreatePost = false;
                        if (isOwner)
                        {
                            if (!existingPosts)
                            {
                                canCreatePost = true;
                            }
                            else if (campaign.ApprovalStatus == InvestDapp.Shared.Enums.ApprovalStatus.Approved)
                            {
                                canCreatePost = true;
                            }
                        }
                    }

                    @if (isOwner)
                    {
                        @if (canCreatePost)
                        {
                            <a href="@Url.Action("CreatePost", new { campaignId = campaign.Id })" class="btn-action btn-primary">
                                <i class="fas fa-plus"></i>
                                @if (!existingPosts)
                                {
                                    <text>Tạo Bài Viết Đầu Tiên</text>
                                }
                                else
                                {
                                    <text>Tạo Bài Viết Mới</text>
                                }
                            </a>
                        }
                        else if (campaign.ApprovalStatus == InvestDapp.Shared.Enums.ApprovalStatus.Pending)
                        {
                            <span class="btn-action" style="background: var(--warning); color: white; cursor: not-allowed;">
                                <i class="fas fa-clock"></i>
                                Chờ Admin Duyệt Chiến Dịch
                            </span>
                        }
                    }
                </div>
            </div>
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success" style="background: rgba(0, 212, 170, 0.1); border-left: 4px solid var(--success); color: var(--success); padding: 15px 20px; border-radius: 8px; margin-bottom: 25px;">
            <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger" style="background: rgba(255, 107, 107, 0.1); border-left: 4px solid var(--danger); color: var(--danger); padding: 15px 20px; border-radius: 8px; margin-bottom: 25px;">
            <i class="fas fa-exclamation-triangle"></i> @TempData["ErrorMessage"]
        </div>
    }

    @if (Model?.Any() == true)
    {
        <!-- Posts Grid -->
        <div class="posts-grid">
            @foreach (var post in Model.OrderByDescending(p => p.CreatedAt))
            {
                <div class="post-card">
                    <div class="post-header">
                        <h3 class="post-title">
                            <a href="@Url.Action("PostDetails", new { id = post.Id })">
                                @post.Title
                            </a>
                        </h3>

                        <div class="post-meta">
                            <div class="post-info">
                                @switch (post.PostType)
                                {
                                    case InvestDapp.Shared.Enums.PostType.Introduction:
                                        <span class="post-type type-introduction">Giới Thiệu</span>
                                        break;
                                    case InvestDapp.Shared.Enums.PostType.Update:
                                        <span class="post-type type-update">Cập Nhật</span>
                                        break;
                                    case InvestDapp.Shared.Enums.PostType.Achievement:
                                        <span class="post-type type-achievement">Thành Tựu</span>
                                        break;
                                    case InvestDapp.Shared.Enums.PostType.Announcement:
                                        <span class="post-type type-announcement">Thông Báo</span>
                                        break;
                                }

                                <span><i class="fas fa-calendar-alt"></i> @post.CreatedAt.ToString("dd/MM/yyyy HH:mm")</span>
                                <span><i class="fas fa-eye"></i> @post.ViewCount lượt xem</span>
                            </div>

                            @switch (post.ApprovalStatus)
                            {
                                case InvestDapp.Shared.Enums.ApprovalStatus.Pending:
                                    <span class="post-status status-pending">
                                        <i class="fas fa-clock"></i> Chờ Duyệt
                                    </span>
                                    break;
                                case InvestDapp.Shared.Enums.ApprovalStatus.Approved:
                                    <span class="post-status status-approved">
                                        <i class="fas fa-check-circle"></i> Đã Duyệt
                                    </span>
                                    break;
                                case InvestDapp.Shared.Enums.ApprovalStatus.Rejected:
                                    <span class="post-status status-rejected">
                                        <i class="fas fa-times-circle"></i> Bị Từ Chối
                                    </span>
                                    break;
                            }
                        </div>
                    </div>

                    <div class="post-content">
                        <div class="post-excerpt">
                            @Html.Raw(post.Content?.Substring(0, Math.Min(post.Content.Length, 200))?.Replace("\n", "<br/>"))
                        </div>
                    </div>

                    <div class="post-actions">
                        <div class="post-stats">
                            @if (!string.IsNullOrEmpty(post.Tags))
                            {
                                <span><i class="fas fa-tags"></i> @post.Tags</span>
                            }
                            @if (post.IsFeatured)
                            {
                                <span style="color: var(--warning);"><i class="fas fa-star"></i> Nổi bật</span>
                            }
                        </div>

                        <div style="display: flex; gap: 10px;">
                            <a href="@Url.Action("PostDetails", new { id = post.Id })" class="btn-action btn-secondary" style="padding: 8px 16px; font-size: 0.85rem;">
                                <i class="fas fa-eye"></i>
                                Xem Chi Tiết
                            </a>

                            @if (User.FindFirst("WalletAddress")?.Value == post.AuthorAddress)
                            {
                                <form method="post" action="@Url.Action("DeletePost", new { id = post.Id })" style="display: inline;">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn-action" style="background: var(--danger); color: white; padding: 8px 16px; font-size: 0.85rem;"
                                            onclick="return confirm('Bạn có chắc chắn muốn xóa bài viết này?')">
                                        <i class="fas fa-trash"></i>
                                        Xóa
                                    </button>
                                </form>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <!-- Empty State -->
        <div class="empty-state">
            <div class="empty-icon">
                <i class="fas fa-newspaper"></i>
            </div>
            <h2 class="empty-title">Chưa Có Bài Viết Nào</h2>
            <p class="empty-description">
                @if (campaign?.ApprovalStatus == InvestDapp.Shared.Enums.ApprovalStatus.Approved)
                {
                    <text>Chiến dịch này chưa có bài viết nào. Hãy tạo bài viết để chia sẻ thông tin với nhà đầu tư!</text>
                }
                else if (campaign?.ApprovalStatus == InvestDapp.Shared.Enums.ApprovalStatus.Pending)
                {
                    <text>Hãy tạo bài viết đầu tiên cho chiến dịch của bạn. Bài viết đầu tiên sẽ được tự động phê duyệt!</text>
                }
                else
                {
                    <text>Chiến dịch đã bị từ chối. Không thể tạo bài viết mới.</text>
                }
            </p>

            @if (User.FindFirst("WalletAddress")?.Value == campaign?.OwnerAddress &&
                    (campaign?.ApprovalStatus == InvestDapp.Shared.Enums.ApprovalStatus.Approved ||
                    campaign?.ApprovalStatus == InvestDapp.Shared.Enums.ApprovalStatus.Pending))
            {
                <a href="@Url.Action("CreatePost", new { campaignId = campaign.Id })" class="btn-action btn-primary" style="padding: 15px 30px; border-radius: 12px; box-shadow: 0 4px 15px rgba(0, 170, 255, 0.3);">
                    <i class="fas fa-plus"></i>
                    @if (campaign?.ApprovalStatus == InvestDapp.Shared.Enums.ApprovalStatus.Pending)
                    {
                        <text>Tạo Bài Viết Đầu Tiên</text>
                    }
                    else
                    {
                        <text>Tạo Bài Viết Mới</text>
                    }
                </a>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Add staggered animation to post cards
            const cards = document.querySelectorAll('.post-card');
            cards.forEach((card, index) => {
                card.style.animationDelay = `${index * 0.1}s`;
            });
        });
    </script>
}