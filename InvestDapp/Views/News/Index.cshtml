@model InvestDapp.ViewModels.News.NewsIndexViewModel
@using InvestDapp.Shared.Enums
@using System.Globalization

@{
    ViewData["Title"] = "Tin tức & cập nhật";
    Layout = "~/Pages/_Layout.cshtml";
    var pagination = Model.Pagination;
    var filterType = Model.FilterType;
    var types = Model.AvailableTypes ?? Array.Empty<PostType>();
}

@functions {
    private static string PostTypeLabel(PostType type) => type switch
    {
        PostType.Announcement => "Thông báo",
        PostType.Achievement => "Thành tựu",
        PostType.Introduction => "Giới thiệu",
        PostType.Update => "Cập nhật",
        _ => type.ToString()
    };
}

@section Styles {
    <style>
        .news-wrapper {
            max-width: 1200px;
            margin: calc(var(--header-h,72px) + 24px) auto 80px;
            padding: 0 clamp(12px, 3vw, 24px);
        }

        .news-hero {
            display: flex;
            flex-direction: column;
            gap: 20px;
            margin-bottom: 28px;
        }

        .news-hero h1 {
            margin: 0;
            font-size: clamp(2rem, 4vw, 2.8rem);
            font-weight: 800;
        }

        .news-hero p {
            margin: 0;
            color: var(--muted);
        }

        .filter-bar {
            display: flex;
            gap: 12px;
            flex-wrap: wrap;
        }

        .filter-chip {
            padding: 10px 16px;
            border-radius: 999px;
            border: 1px solid rgba(255,255,255,.08);
            color: var(--muted);
            background: rgba(255,255,255,.02);
            font-weight: 600;
            text-decoration: none;
            transition: all .2s;
        }

        .filter-chip:hover {
            color: var(--fg);
            border-color: rgba(108,240,255,.3);
        }

        .filter-chip.active {
            background: linear-gradient(90deg, rgba(108,240,255,.22), rgba(155,107,255,.22));
            color: var(--fg);
            border-color: transparent;
        }

        .featured-card {
            display: grid;
            grid-template-columns: minmax(0, 1.2fr) minmax(0, 1fr);
            gap: 24px;
            padding: 24px;
            border-radius: 20px;
            border: 1px solid rgba(255,255,255,.08);
            background: linear-gradient(180deg, rgba(255,255,255,.08), rgba(255,255,255,.02));
            box-shadow: var(--shadow);
            color: inherit;
            text-decoration: none;
            margin-bottom: 32px;
        }

        .featured-card:hover {
            transform: translateY(-4px);
        }

        .featured-media {
            border-radius: 16px;
            overflow: hidden;
            min-height: 260px;
            background: rgba(255,255,255,.04);
        }

        .featured-media img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .featured-body {
            display: flex;
            flex-direction: column;
            gap: 14px;
            justify-content: center;
        }

        .pill {
            align-self: flex-start;
            padding: 6px 12px;
            border-radius: 999px;
            background: rgba(108,240,255,.16);
            color: #7beaff;
            font-size: .85rem;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: .05em;
        }

        .featured-body h2 {
            margin: 0;
            font-size: clamp(1.8rem, 3.2vw, 2.4rem);
        }

        .featured-body p {
            margin: 0;
            color: var(--muted);
            line-height: 1.6;
        }

        .meta {
            display: flex;
            gap: 16px;
            color: var(--muted);
            font-size: .95rem;
            flex-wrap: wrap;
        }

        .news-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 20px;
        }

        .article-card {
            display: flex;
            flex-direction: column;
            border-radius: 16px;
            border: 1px solid rgba(255,255,255,.06);
            background: rgba(255,255,255,.03);
            overflow: hidden;
            min-height: 100%;
            transition: transform .2s, border-color .2s;
        }

        .article-card:hover {
            transform: translateY(-4px);
            border-color: rgba(108,240,255,.25);
        }

        .article-thumb {
            width: 100%;
            height: 180px;
            object-fit: cover;
        }

        .article-body {
            display: flex;
            flex-direction: column;
            gap: 10px;
            padding: 18px;
        }

        .article-body h3 {
            margin: 0;
            font-size: 1.1rem;
            line-height: 1.45;
        }

        .article-excerpt {
            margin: 0;
            color: var(--muted);
            line-height: 1.6;
        }

        .article-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: auto;
            font-size: .9rem;
            color: var(--muted);
        }

        .article-footer .cta {
            color: var(--primary);
            font-weight: 600;
            text-decoration: none;
        }

        .empty-state {
            grid-column: 1 / -1;
            padding: 40px;
            border-radius: 16px;
            border: 1px solid rgba(255,255,255,.08);
            background: rgba(255,255,255,.04);
            text-align: center;
            color: var(--muted);
        }

        .news-pagination {
            margin-top: 36px;
            display: flex;
            justify-content: center;
            gap: 10px;
        }

        .page-link {
            min-width: 44px;
            padding: 10px 14px;
            border-radius: 12px;
            border: 1px solid rgba(255,255,255,.08);
            background: rgba(255,255,255,.02);
            color: var(--fg);
            text-align: center;
            text-decoration: none;
            font-weight: 600;
        }

        .page-link.active {
            background: linear-gradient(90deg, rgba(108,240,255,.24), rgba(155,107,255,.24));
            border-color: transparent;
        }

        .page-link.disabled {
            opacity: .4;
            pointer-events: none;
        }

        @@media (max-width: 960px) {
            .featured-card {
                grid-template-columns: 1fr;
            }

            .featured-media {
                min-height: 220px;
            }
        }

        @@media (max-width: 640px) {
            .news-pagination {
                flex-wrap: wrap;
            }

            .article-footer {
                flex-direction: column;
                gap: 6px;
                align-items: flex-start;
            }
        }
    </style>
}

<main class="news-wrapper">
    <header class="news-hero">
        <div>
            <h1>Tin tức & Cập nhật</h1>
            <p>Nắm bắt nhịp độ dự án, thông báo quan trọng và câu chuyện nổi bật từ cộng đồng.</p>
        </div>
        <div class="filter-bar" role="tablist">
            <a asp-action="Index" asp-route-page="1" class="filter-chip @(filterType == null ? "active" : string.Empty)">Tất cả</a>
            @foreach (var type in types.Distinct())
            {
                var isActive = filterType == type;
                <a asp-action="Index"
                   asp-route-type="@type"
                   asp-route-page="1"
                   class="filter-chip @(isActive ? "active" : string.Empty)">@PostTypeLabel(type)</a>
            }
        </div>
    </header>

    @if (Model.Featured != null)
    {
        var featured = Model.Featured;
        var featuredDate = featured.PublishedAt.ToLocalTime().ToString("dd/MM/yyyy HH:mm");
        <a class="featured-card" href="@Url.Action("PostDetails", "Campaigns", new { id = featured.Id })">
            <div class="featured-media">
                @if (!string.IsNullOrWhiteSpace(featured.ImageUrl))
                {
                    <img src="@featured.ImageUrl" alt="@featured.Title" />
                }
                else
                {
                    <div style="width:100%;height:100%;display:flex;align-items:center;justify-content:center;background:linear-gradient(135deg, rgba(108,240,255,.18), rgba(155,107,255,.24));color:var(--fg);font-size:2rem;font-weight:800;">
                        @featured.Title[..Math.Min(2, featured.Title.Length)].ToUpperInvariant()
                    </div>
                }
            </div>
            <div class="featured-body">
                <span class="pill">@PostTypeLabel(featured.PostType)</span>
                <h2>@featured.Title</h2>
                <p>@featured.Excerpt</p>
                <div class="meta">
                    <span>@featured.CampaignName</span>
                    <span>@featuredDate</span>
                </div>
            </div>
        </a>
    }

    <section class="news-grid">
        @if (!Model.Articles.Any())
        {
            <div class="empty-state">
                Hiện chưa có bài viết nào cho bộ lọc này. Hãy quay lại sau hoặc thử danh mục khác.
            </div>
        }
        else
        {
            foreach (var article in Model.Articles)
            {
                var articleDate = article.PublishedAt.ToLocalTime().ToString("dd/MM/yyyy");
                <article class="article-card">
                    @if (!string.IsNullOrWhiteSpace(article.ImageUrl))
                    {
                        <img class="article-thumb" src="@article.ImageUrl" alt="@article.Title" />
                    }
                    else
                    {
                        <div class="article-thumb" style="display:flex;align-items:center;justify-content:center;background:linear-gradient(135deg, rgba(108,240,255,.12), rgba(155,107,255,.18));color:var(--fg);font-weight:700;font-size:1.4rem;">
                            @article.Title[..Math.Min(2, article.Title.Length)].ToUpperInvariant()
                        </div>
                    }
                    <div class="article-body">
                        <span class="pill" style="padding:4px 10px;font-size:.75rem;">@PostTypeLabel(article.PostType)</span>
                        <h3>@article.Title</h3>
                        <p class="article-excerpt">@article.Excerpt</p>
                        <div class="article-footer">
                            <span>@article.CampaignName • @articleDate</span>
                            <a class="cta" href="@Url.Action("PostDetails", "Campaigns", new { id = article.Id })">Xem chi tiết</a>
                        </div>
                    </div>
                </article>
            }
        }
    </section>

    @if (pagination.TotalPages > 1)
    {
        <nav class="news-pagination" aria-label="Điều hướng trang tin tức">
            <a class="page-link @(pagination.HasPrevious ? string.Empty : "disabled")"
               asp-action="Index"
               asp-route-type="@filterType"
               asp-route-page="@(pagination.Page - 1)"
               aria-label="Trang trước">«</a>

            @for (var i = Math.Max(1, pagination.Page - 2); i <= Math.Min(pagination.TotalPages, pagination.Page + 2); i++)
            {
                <a class="page-link @(i == pagination.Page ? "active" : string.Empty)"
                   asp-action="Index"
                   asp-route-type="@filterType"
                   asp-route-page="@i">@i</a>
            }

            <a class="page-link @(pagination.HasNext ? string.Empty : "disabled")"
               asp-action="Index"
               asp-route-type="@filterType"
               asp-route-page="@(pagination.Page + 1)"
               aria-label="Trang sau">»</a>
        </nav>
    }
</main>